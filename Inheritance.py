# -*- coding: utf-8 -*-
"""Inheritance.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1R-8kdhsav6sNai8pQkIptwM4GJioY_F4
"""

#Inheritance
#A class can inherit attributes and behaviour methods from another class.
#The process of accessing the "base class" properties in the "derived class".


class Teacher():                          #Base class or parent class
    def Teach(self):
        print('I will teach you')
    def Test(self):
        print('I will test you')
        
class Student(Teacher):                   #Derived class or child class
    def Learn(self):
        print('I will learn from you')
    def Earn(self):
        print('I will earn from you')
        
s=Student()                               #Assigning the object to the derived class
s.Teach()                                 #Accesing the properties from base class
s.Test()

#Multiple Inheritance
#The process of accessing the two or more "base class" properties in the "derived class".
class Teacher():                          #Parent class
    def Teach(self):
        print('I will teach you')
    def Test(self):
        print('I will test you')
        
class Student():                          #Parent class
    def Learn(self):
        print('I will learn from you')
    def Earn(self):
        print('I will earn from you')
        
class Tution(Teacher,Student):                    #child class
    def Work(self):
        print('I will learn and i will earn!')

t=Tution()                                #Assigning the object to the derived class
t.Teach()                                 #Accesing the properties from base class
t.Learn()

#Multilevel Inheritance
#A class can inherit attributes and behaviour methods from one class, which is already derived from another class.


class Teacher():                          #Parent class
    def Teach(self):
        print('I will teach you')
    def Test(self):
        print('I will test you')
        
class Student(Teacher):                   #child class and               parent class for Tution
    def Learn(self):
        print('I will learn from you')
    def Earn(self):
        print('I will earn from you')  
        
class Tution(Student):                    #child class
    def Work(self):
        print('I will learn and i will earn!')

t=Tution()                                #Assigning the object to the derived class
t.Teach()                                 #Accesing the properties from base class
t.Learn()

#Hierarchical Inheritance
#The process of accessing the single "base classe" properties in multiple "derived classes".
class Teacher():                          #Base class or parent class
    def Teach(self):
        print('I will teach you')
    def Test(self):
        print('I will test you')
        
class Student(Teacher):                   #Derived class or child class
    def Learn(self):
        print('I will learn from you')
    def Earn(self):
        print('I will earn from you')
class Professor(Teacher):                 #Derived class or child class
    def Ding(self):
        print('I will ding from you')
    def Dong(self):
        print('I will dong from you')
s=Student()
p=Professor()
s.Teach()
p.Test()

