# -*- coding: utf-8 -*-
"""Objects and Classes.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hPc2A5boTnVJIYzV4LT3jupToaB5zh-L
"""

#A class is a code template for creating objects.
#A class is the blueprint from which individual objects are created.
#Creating a class and object
class Computer():
    #a=5                           #Attributes are nothing but Variables.
    def Config(self):              #Behaviours are nothing but Methods(If the function is inside the class it is known as Method.)
        print('I3','8GB','1TB')
        
    def Screen(self):
        print('32 inches')
        
    def Colour(self):
        print('Black')
        
#Creating the Objects for the Class Computer.
c1=Computer()   #Assigning the object 'c1' 
c2=Computer()
c3=Computer()

#Checking the type of c1
print(type(c1))

#Calling Functions with Class name.
Computer.Config(c1) 
Computer.Config(c2)
Computer.Screen(c3)

#Calling Functions without using Class name.
c1.Colour() #behind the scene Config will take c1 as a parameter and passes it through it.
c2.Config()
c3.Screen()

#__init__ method                   
class Computer:
    def __init__(self,cpu,ram):
        self.sai=cpu                #you can use any name here while assigning with self!
        self.tarun=ram
    def Config(self):
        print('the configuration is',self.sai,self.tarun)
        
c1=Computer('i5','16GB')
c1.Config()                            
c2=Computer('i7','32GB')
c2.Config() 

#behind the scene Config will take c1 as a parameter and passes it through it.

